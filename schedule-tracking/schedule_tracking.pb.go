// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.3
// source: schedule_tracking.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateTrackingTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Numbers []string `protobuf:"bytes,1,rep,name=numbers,proto3" json:"numbers,omitempty"`
	Time    string   `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	UserId  int64    `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UpdateTrackingTimeRequest) Reset() {
	*x = UpdateTrackingTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTrackingTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrackingTimeRequest) ProtoMessage() {}

func (x *UpdateTrackingTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrackingTimeRequest.ProtoReflect.Descriptor instead.
func (*UpdateTrackingTimeRequest) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateTrackingTimeRequest) GetNumbers() []string {
	if x != nil {
		return x.Numbers
	}
	return nil
}

func (x *UpdateTrackingTimeRequest) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *UpdateTrackingTimeRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type AddOnTrackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId              int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Numbers             []string `protobuf:"bytes,2,rep,name=numbers,proto3" json:"numbers,omitempty"`
	Emails              []string `protobuf:"bytes,3,rep,name=emails,proto3" json:"emails,omitempty"`
	EmailMessageSubject string   `protobuf:"bytes,4,opt,name=email_message_subject,json=emailMessageSubject,proto3" json:"email_message_subject,omitempty"`
	Time                string   `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *AddOnTrackRequest) Reset() {
	*x = AddOnTrackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOnTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOnTrackRequest) ProtoMessage() {}

func (x *AddOnTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOnTrackRequest.ProtoReflect.Descriptor instead.
func (*AddOnTrackRequest) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{1}
}

func (x *AddOnTrackRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddOnTrackRequest) GetNumbers() []string {
	if x != nil {
		return x.Numbers
	}
	return nil
}

func (x *AddOnTrackRequest) GetEmails() []string {
	if x != nil {
		return x.Emails
	}
	return nil
}

func (x *AddOnTrackRequest) GetEmailMessageSubject() string {
	if x != nil {
		return x.EmailMessageSubject
	}
	return ""
}

func (x *AddOnTrackRequest) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type UpdateTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req          *AddOnTrackRequest `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	IsContainers bool               `protobuf:"varint,2,opt,name=is_containers,json=isContainers,proto3" json:"is_containers,omitempty"`
}

func (x *UpdateTaskRequest) Reset() {
	*x = UpdateTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskRequest) ProtoMessage() {}

func (x *UpdateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateTaskRequest) GetReq() *AddOnTrackRequest {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *UpdateTaskRequest) GetIsContainers() bool {
	if x != nil {
		return x.IsContainers
	}
	return false
}

type BaseAddOnTrackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success     bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Number      string `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	NextRunTime int64  `protobuf:"varint,3,opt,name=next_run_time,json=nextRunTime,proto3" json:"next_run_time,omitempty"`
}

func (x *BaseAddOnTrackResponse) Reset() {
	*x = BaseAddOnTrackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseAddOnTrackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseAddOnTrackResponse) ProtoMessage() {}

func (x *BaseAddOnTrackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseAddOnTrackResponse.ProtoReflect.Descriptor instead.
func (*BaseAddOnTrackResponse) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{3}
}

func (x *BaseAddOnTrackResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BaseAddOnTrackResponse) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *BaseAddOnTrackResponse) GetNextRunTime() int64 {
	if x != nil {
		return x.NextRunTime
	}
	return 0
}

type RepeatedBaseAddOnTrackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*BaseAddOnTrackResponse `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *RepeatedBaseAddOnTrackResponse) Reset() {
	*x = RepeatedBaseAddOnTrackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedBaseAddOnTrackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedBaseAddOnTrackResponse) ProtoMessage() {}

func (x *RepeatedBaseAddOnTrackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedBaseAddOnTrackResponse.ProtoReflect.Descriptor instead.
func (*RepeatedBaseAddOnTrackResponse) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{4}
}

func (x *RepeatedBaseAddOnTrackResponse) GetResponse() []*BaseAddOnTrackResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type AddOnTrackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse   []*BaseAddOnTrackResponse `protobuf:"bytes,1,rep,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	AlreadyOnTrack []string                  `protobuf:"bytes,3,rep,name=already_on_track,json=alreadyOnTrack,proto3" json:"already_on_track,omitempty"`
}

func (x *AddOnTrackResponse) Reset() {
	*x = AddOnTrackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOnTrackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOnTrackResponse) ProtoMessage() {}

func (x *AddOnTrackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOnTrackResponse.ProtoReflect.Descriptor instead.
func (*AddOnTrackResponse) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{5}
}

func (x *AddOnTrackResponse) GetBaseResponse() []*BaseAddOnTrackResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *AddOnTrackResponse) GetAlreadyOnTrack() []string {
	if x != nil {
		return x.AlreadyOnTrack
	}
	return nil
}

type GetInfoAboutTrackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number string `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	UserId int64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetInfoAboutTrackRequest) Reset() {
	*x = GetInfoAboutTrackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoAboutTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoAboutTrackRequest) ProtoMessage() {}

func (x *GetInfoAboutTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoAboutTrackRequest.ProtoReflect.Descriptor instead.
func (*GetInfoAboutTrackRequest) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{6}
}

func (x *GetInfoAboutTrackRequest) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *GetInfoAboutTrackRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ScheduleTrackingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time    string   `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Emails  []string `protobuf:"bytes,2,rep,name=emails,proto3" json:"emails,omitempty"`
	Subject string   `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *ScheduleTrackingInfo) Reset() {
	*x = ScheduleTrackingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleTrackingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleTrackingInfo) ProtoMessage() {}

func (x *ScheduleTrackingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleTrackingInfo.ProtoReflect.Descriptor instead.
func (*ScheduleTrackingInfo) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{7}
}

func (x *ScheduleTrackingInfo) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *ScheduleTrackingInfo) GetEmails() []string {
	if x != nil {
		return x.Emails
	}
	return nil
}

func (x *ScheduleTrackingInfo) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

type GetInfoAboutTrackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number               string                `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	IsContainer          bool                  `protobuf:"varint,3,opt,name=is_container,json=isContainer,proto3" json:"is_container,omitempty"`
	IsOnTrack            bool                  `protobuf:"varint,4,opt,name=is_on_track,json=isOnTrack,proto3" json:"is_on_track,omitempty"`
	ScheduleTrackingInfo *ScheduleTrackingInfo `protobuf:"bytes,5,opt,name=schedule_tracking_info,json=scheduleTrackingInfo,proto3" json:"schedule_tracking_info,omitempty"`
}

func (x *GetInfoAboutTrackResponse) Reset() {
	*x = GetInfoAboutTrackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoAboutTrackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoAboutTrackResponse) ProtoMessage() {}

func (x *GetInfoAboutTrackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoAboutTrackResponse.ProtoReflect.Descriptor instead.
func (*GetInfoAboutTrackResponse) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{8}
}

func (x *GetInfoAboutTrackResponse) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *GetInfoAboutTrackResponse) GetIsContainer() bool {
	if x != nil {
		return x.IsContainer
	}
	return false
}

func (x *GetInfoAboutTrackResponse) GetIsOnTrack() bool {
	if x != nil {
		return x.IsOnTrack
	}
	return false
}

func (x *GetInfoAboutTrackResponse) GetScheduleTrackingInfo() *ScheduleTrackingInfo {
	if x != nil {
		return x.ScheduleTrackingInfo
	}
	return nil
}

type DeleteFromTrackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Number []string `protobuf:"bytes,2,rep,name=number,proto3" json:"number,omitempty"`
}

func (x *DeleteFromTrackRequest) Reset() {
	*x = DeleteFromTrackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFromTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFromTrackRequest) ProtoMessage() {}

func (x *DeleteFromTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFromTrackRequest.ProtoReflect.Descriptor instead.
func (*DeleteFromTrackRequest) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteFromTrackRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteFromTrackRequest) GetNumber() []string {
	if x != nil {
		return x.Number
	}
	return nil
}

type GetTimeZoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeZone string `protobuf:"bytes,1,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
}

func (x *GetTimeZoneResponse) Reset() {
	*x = GetTimeZoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeZoneResponse) ProtoMessage() {}

func (x *GetTimeZoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeZoneResponse.ProtoReflect.Descriptor instead.
func (*GetTimeZoneResponse) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{10}
}

func (x *GetTimeZoneResponse) GetTimeZone() string {
	if x != nil {
		return x.TimeZone
	}
	return ""
}

type GetArchiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetArchiveRequest) Reset() {
	*x = GetArchiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArchiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArchiveRequest) ProtoMessage() {}

func (x *GetArchiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArchiveRequest.ProtoReflect.Descriptor instead.
func (*GetArchiveRequest) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{11}
}

func (x *GetArchiveRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type InfoAboutMoving struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time          int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	OperationName string `protobuf:"bytes,2,opt,name=operation_name,json=operationName,proto3" json:"operation_name,omitempty"`
	Location      string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Vessel        string `protobuf:"bytes,4,opt,name=vessel,proto3" json:"vessel,omitempty"`
}

func (x *InfoAboutMoving) Reset() {
	*x = InfoAboutMoving{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoAboutMoving) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoAboutMoving) ProtoMessage() {}

func (x *InfoAboutMoving) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoAboutMoving.ProtoReflect.Descriptor instead.
func (*InfoAboutMoving) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{12}
}

func (x *InfoAboutMoving) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *InfoAboutMoving) GetOperationName() string {
	if x != nil {
		return x.OperationName
	}
	return ""
}

func (x *InfoAboutMoving) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *InfoAboutMoving) GetVessel() string {
	if x != nil {
		return x.Vessel
	}
	return ""
}

type TrackingByContainerNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Container       string             `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	ContainerSize   string             `protobuf:"bytes,2,opt,name=container_size,json=containerSize,proto3" json:"container_size,omitempty"`
	Scac            string             `protobuf:"bytes,3,opt,name=scac,proto3" json:"scac,omitempty"`
	InfoAboutMoving []*InfoAboutMoving `protobuf:"bytes,4,rep,name=info_about_moving,json=infoAboutMoving,proto3" json:"info_about_moving,omitempty"`
}

func (x *TrackingByContainerNumberResponse) Reset() {
	*x = TrackingByContainerNumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingByContainerNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingByContainerNumberResponse) ProtoMessage() {}

func (x *TrackingByContainerNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingByContainerNumberResponse.ProtoReflect.Descriptor instead.
func (*TrackingByContainerNumberResponse) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{13}
}

func (x *TrackingByContainerNumberResponse) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *TrackingByContainerNumberResponse) GetContainerSize() string {
	if x != nil {
		return x.ContainerSize
	}
	return ""
}

func (x *TrackingByContainerNumberResponse) GetScac() string {
	if x != nil {
		return x.Scac
	}
	return ""
}

func (x *TrackingByContainerNumberResponse) GetInfoAboutMoving() []*InfoAboutMoving {
	if x != nil {
		return x.InfoAboutMoving
	}
	return nil
}

type TrackingByBillNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BillNo           string             `protobuf:"bytes,1,opt,name=billNo,proto3" json:"billNo,omitempty"`
	Scac             string             `protobuf:"bytes,3,opt,name=scac,proto3" json:"scac,omitempty"`
	InfoAboutMoving  []*InfoAboutMoving `protobuf:"bytes,4,rep,name=info_about_moving,json=infoAboutMoving,proto3" json:"info_about_moving,omitempty"`
	EtaFinalDelivery int64              `protobuf:"varint,5,opt,name=eta_final_delivery,json=etaFinalDelivery,proto3" json:"eta_final_delivery,omitempty"`
}

func (x *TrackingByBillNumberResponse) Reset() {
	*x = TrackingByBillNumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingByBillNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingByBillNumberResponse) ProtoMessage() {}

func (x *TrackingByBillNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingByBillNumberResponse.ProtoReflect.Descriptor instead.
func (*TrackingByBillNumberResponse) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{14}
}

func (x *TrackingByBillNumberResponse) GetBillNo() string {
	if x != nil {
		return x.BillNo
	}
	return ""
}

func (x *TrackingByBillNumberResponse) GetScac() string {
	if x != nil {
		return x.Scac
	}
	return ""
}

func (x *TrackingByBillNumberResponse) GetInfoAboutMoving() []*InfoAboutMoving {
	if x != nil {
		return x.InfoAboutMoving
	}
	return nil
}

func (x *TrackingByBillNumberResponse) GetEtaFinalDelivery() int64 {
	if x != nil {
		return x.EtaFinalDelivery
	}
	return 0
}

type GetAllBillsContainerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bills      []*TrackingByBillNumberResponse      `protobuf:"bytes,1,rep,name=bills,proto3" json:"bills,omitempty"`
	Containers []*TrackingByContainerNumberResponse `protobuf:"bytes,2,rep,name=containers,proto3" json:"containers,omitempty"`
}

func (x *GetAllBillsContainerResponse) Reset() {
	*x = GetAllBillsContainerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllBillsContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllBillsContainerResponse) ProtoMessage() {}

func (x *GetAllBillsContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllBillsContainerResponse.ProtoReflect.Descriptor instead.
func (*GetAllBillsContainerResponse) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{15}
}

func (x *GetAllBillsContainerResponse) GetBills() []*TrackingByBillNumberResponse {
	if x != nil {
		return x.Bills
	}
	return nil
}

func (x *GetAllBillsContainerResponse) GetContainers() []*TrackingByContainerNumberResponse {
	if x != nil {
		return x.Containers
	}
	return nil
}

var File_schedule_tracking_proto protoreflect.FileDescriptor

var file_schedule_tracking_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa6, 0x01, 0x0a,
	0x11, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x0a,
	0x15, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x6f, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x03, 0x72, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x6e,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x72, 0x65,
	0x71, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x6e, 0x0a, 0x16, 0x42, 0x61, 0x73, 0x65, 0x41, 0x64,
	0x64, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x52,
	0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x66, 0x0a, 0x1e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x61, 0x73, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8d,
	0x01, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f,
	0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x22, 0x4b,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x14, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xd4, 0x01, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4f, 0x6e, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x12, 0x5c, 0x0a, 0x16, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x49, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x32, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x22,
	0x2c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x80, 0x01,
	0x0a, 0x0f, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x6e,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x73, 0x73,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x73, 0x73, 0x65, 0x6c,
	0x22, 0xcb, 0x01, 0x0a, 0x21, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x63, 0x61, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x63, 0x61, 0x63, 0x12,
	0x4d, 0x0a, 0x11, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x6f,
	0x76, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x6e,
	0x66, 0x6f, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x69,
	0x6e, 0x66, 0x6f, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x22, 0xc7,
	0x01, 0x0a, 0x1c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x42, 0x69, 0x6c,
	0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x62, 0x69, 0x6c, 0x6c, 0x4e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x63, 0x61, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x63, 0x61, 0x63, 0x12, 0x4d, 0x0a, 0x11, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x6f, 0x76, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x62,
	0x6f, 0x75, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x69, 0x6e, 0x66, 0x6f, 0x41,
	0x62, 0x6f, 0x75, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x74,
	0x61, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x65, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x22, 0xb9, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x42, 0x69, 0x6c, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x62, 0x69, 0x6c,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x42, 0x69, 0x6c, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x12,
	0x53, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x42,
	0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x32, 0xbc, 0x04, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x63, 0x0a, 0x14, 0x41, 0x64, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x12, 0x23, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60,
	0x0a, 0x11, 0x41, 0x64, 0x64, 0x42, 0x69, 0x6c, 0x6c, 0x4e, 0x6f, 0x73, 0x4f, 0x6e, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x12, 0x23, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x4f,
	0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x47, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12,
	0x28, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x62,
	0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x2a, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41,
	0x62, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f,
	0x6e, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x25, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x32, 0x6e, 0x0a, 0x07, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x63,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x23, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x69, 0x6c, 0x6c, 0x73,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_schedule_tracking_proto_rawDescOnce sync.Once
	file_schedule_tracking_proto_rawDescData = file_schedule_tracking_proto_rawDesc
)

func file_schedule_tracking_proto_rawDescGZIP() []byte {
	file_schedule_tracking_proto_rawDescOnce.Do(func() {
		file_schedule_tracking_proto_rawDescData = protoimpl.X.CompressGZIP(file_schedule_tracking_proto_rawDescData)
	})
	return file_schedule_tracking_proto_rawDescData
}

var file_schedule_tracking_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_schedule_tracking_proto_goTypes = []interface{}{
	(*UpdateTrackingTimeRequest)(nil),         // 0: schedule_tacking.UpdateTrackingTimeRequest
	(*AddOnTrackRequest)(nil),                 // 1: schedule_tacking.AddOnTrackRequest
	(*UpdateTaskRequest)(nil),                 // 2: schedule_tacking.UpdateTaskRequest
	(*BaseAddOnTrackResponse)(nil),            // 3: schedule_tacking.BaseAddOnTrackResponse
	(*RepeatedBaseAddOnTrackResponse)(nil),    // 4: schedule_tacking.RepeatedBaseAddOnTrackResponse
	(*AddOnTrackResponse)(nil),                // 5: schedule_tacking.AddOnTrackResponse
	(*GetInfoAboutTrackRequest)(nil),          // 6: schedule_tacking.GetInfoAboutTrackRequest
	(*ScheduleTrackingInfo)(nil),              // 7: schedule_tacking.ScheduleTrackingInfo
	(*GetInfoAboutTrackResponse)(nil),         // 8: schedule_tacking.GetInfoAboutTrackResponse
	(*DeleteFromTrackRequest)(nil),            // 9: schedule_tacking.DeleteFromTrackRequest
	(*GetTimeZoneResponse)(nil),               // 10: schedule_tacking.GetTimeZoneResponse
	(*GetArchiveRequest)(nil),                 // 11: schedule_tacking.GetArchiveRequest
	(*InfoAboutMoving)(nil),                   // 12: schedule_tacking.InfoAboutMoving
	(*TrackingByContainerNumberResponse)(nil), // 13: schedule_tacking.TrackingByContainerNumberResponse
	(*TrackingByBillNumberResponse)(nil),      // 14: schedule_tacking.TrackingByBillNumberResponse
	(*GetAllBillsContainerResponse)(nil),      // 15: schedule_tacking.GetAllBillsContainerResponse
	(*emptypb.Empty)(nil),                     // 16: google.protobuf.Empty
}
var file_schedule_tracking_proto_depIdxs = []int32{
	1,  // 0: schedule_tacking.UpdateTaskRequest.req:type_name -> schedule_tacking.AddOnTrackRequest
	3,  // 1: schedule_tacking.RepeatedBaseAddOnTrackResponse.response:type_name -> schedule_tacking.BaseAddOnTrackResponse
	3,  // 2: schedule_tacking.AddOnTrackResponse.base_response:type_name -> schedule_tacking.BaseAddOnTrackResponse
	7,  // 3: schedule_tacking.GetInfoAboutTrackResponse.schedule_tracking_info:type_name -> schedule_tacking.ScheduleTrackingInfo
	12, // 4: schedule_tacking.TrackingByContainerNumberResponse.info_about_moving:type_name -> schedule_tacking.InfoAboutMoving
	12, // 5: schedule_tacking.TrackingByBillNumberResponse.info_about_moving:type_name -> schedule_tacking.InfoAboutMoving
	14, // 6: schedule_tacking.GetAllBillsContainerResponse.bills:type_name -> schedule_tacking.TrackingByBillNumberResponse
	13, // 7: schedule_tacking.GetAllBillsContainerResponse.containers:type_name -> schedule_tacking.TrackingByContainerNumberResponse
	1,  // 8: schedule_tacking.ScheduleTracking.AddContainersOnTrack:input_type -> schedule_tacking.AddOnTrackRequest
	1,  // 9: schedule_tacking.ScheduleTracking.AddBillNosOnTrack:input_type -> schedule_tacking.AddOnTrackRequest
	2,  // 10: schedule_tacking.ScheduleTracking.Update:input_type -> schedule_tacking.UpdateTaskRequest
	9,  // 11: schedule_tacking.ScheduleTracking.DeleteFromTracking:input_type -> schedule_tacking.DeleteFromTrackRequest
	6,  // 12: schedule_tacking.ScheduleTracking.GetInfoAboutTrack:input_type -> schedule_tacking.GetInfoAboutTrackRequest
	16, // 13: schedule_tacking.ScheduleTracking.GetTimeZone:input_type -> google.protobuf.Empty
	11, // 14: schedule_tacking.Archive.GetArchive:input_type -> schedule_tacking.GetArchiveRequest
	5,  // 15: schedule_tacking.ScheduleTracking.AddContainersOnTrack:output_type -> schedule_tacking.AddOnTrackResponse
	5,  // 16: schedule_tacking.ScheduleTracking.AddBillNosOnTrack:output_type -> schedule_tacking.AddOnTrackResponse
	16, // 17: schedule_tacking.ScheduleTracking.Update:output_type -> google.protobuf.Empty
	16, // 18: schedule_tacking.ScheduleTracking.DeleteFromTracking:output_type -> google.protobuf.Empty
	8,  // 19: schedule_tacking.ScheduleTracking.GetInfoAboutTrack:output_type -> schedule_tacking.GetInfoAboutTrackResponse
	10, // 20: schedule_tacking.ScheduleTracking.GetTimeZone:output_type -> schedule_tacking.GetTimeZoneResponse
	15, // 21: schedule_tacking.Archive.GetArchive:output_type -> schedule_tacking.GetAllBillsContainerResponse
	15, // [15:22] is the sub-list for method output_type
	8,  // [8:15] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_schedule_tracking_proto_init() }
func file_schedule_tracking_proto_init() {
	if File_schedule_tracking_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_schedule_tracking_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTrackingTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOnTrackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseAddOnTrackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepeatedBaseAddOnTrackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOnTrackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoAboutTrackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleTrackingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoAboutTrackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFromTrackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeZoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArchiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoAboutMoving); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingByContainerNumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingByBillNumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllBillsContainerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schedule_tracking_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_schedule_tracking_proto_goTypes,
		DependencyIndexes: file_schedule_tracking_proto_depIdxs,
		MessageInfos:      file_schedule_tracking_proto_msgTypes,
	}.Build()
	File_schedule_tracking_proto = out.File
	file_schedule_tracking_proto_rawDesc = nil
	file_schedule_tracking_proto_goTypes = nil
	file_schedule_tracking_proto_depIdxs = nil
}
