syntax = "proto3";
package schedule_tacking;
import "google/protobuf/empty.proto";
import "google/api/annotation.proto";
option go_package = ".";

service ScheduleTracking{
  rpc AddContainersOnTrack(AddOnTrackRequest) returns (AddOnTrackResponse) {
    option (google.api.http) = {
      post: "/schedule/containers",
      body: "*"
    };
  };
  rpc AddBillNosOnTrack(AddOnTrackRequest) returns (AddOnTrackResponse) {
    option (google.api.http) = {
      post: "/schedule/bills",
      body: "*"
    };
  };

  rpc UpdateContainer(AddOnTrackRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/schedule/containers",
      body: "*"
    };
  };

  rpc UpdateBill(AddOnTrackRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/schedule/bills",
      body: "*"
    };
  };

  rpc DeleteContainersFromTracking(DeleteFromTrackingRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      delete: "/schedule/containers",
      body: "*"
    };
  };

  rpc DeleteBillsFromTracking(DeleteFromTrackingRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      delete: "/schedule/bills",
      body: "*"
    };
  };

  rpc GetInfoAboutTrack(GetInfoAboutTrackRequest) returns (GetInfoAboutTrackResponse) {
    option (google.api.http) = {
      get: "/schedule/info"
    };
  };
  rpc GetTimeZone(google.protobuf.Empty) returns (GetTimeZoneResponse) {
    option (google.api.http) = {
      get: "/schedule/timezone"
    };
  };
}

service Archive{
  rpc GetArchive(google.protobuf.Empty) returns (GetAllBillsContainerResponse) {};
}

message AddOnTrackRequest{
  repeated string numbers = 2;
  repeated string emails = 3;
  string email_message_subject = 4;
  string time = 5;
}

message BaseAddOnTrackResponse{
  bool success = 1;
  string number = 2;
  int64 next_run_time = 3;
}

message RepeatedBaseAddOnTrackResponse{
  repeated BaseAddOnTrackResponse response = 1;
}

message AddOnTrackResponse{
  repeated BaseAddOnTrackResponse base_response = 1;
  repeated string already_on_track = 3;
}

message GetInfoAboutTrackRequest{
  string number = 1;
  int64 user_id = 2;
}

message ScheduleTrackingInfo{
  string time = 1;
  repeated string emails = 2;
  string subject = 3;
}

message GetInfoAboutTrackResponse{
  string number = 2;
  bool is_container = 3;
  bool is_on_track = 4;
  ScheduleTrackingInfo schedule_tracking_info = 5;
}

message DeleteFromTrackingRequest{
  repeated string numbers = 2;
}

message GetTimeZoneResponse{
  string time_zone = 1;
}

message InfoAboutMoving{
  int64 time = 1;
  string operation_name = 2;
  string location = 3;
  string vessel = 4;
}

message TrackingByContainerNumberResponse{
  string container = 1 ;
  string container_size = 2;
  string scac = 3;
  repeated InfoAboutMoving info_about_moving = 4;
}

message TrackingByBillNumberResponse{
  string billNo = 1;
  string scac = 3;
  repeated InfoAboutMoving info_about_moving = 4;
  int64 eta_final_delivery = 5;
}

message GetAllBillsContainerResponse{
  repeated TrackingByBillNumberResponse bills = 1;
  repeated TrackingByContainerNumberResponse containers = 2;
}